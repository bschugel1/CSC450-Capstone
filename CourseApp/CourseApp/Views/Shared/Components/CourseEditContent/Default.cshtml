@model CourseEditVM
@using CourseApp.ViewComponents
@{


}
<h3>Sections</h3>
<a asp-action="edit" asp-route-showadd="true" asp-route-id="@Model.Id">
    Add Course Section
</a>

<ul class="list-unstyled">
    @foreach (var item in Model.Sections.Where(x => x.ParentSectionId == null).OrderBy(x => x.DisplayOrder))
    {
        await renderSection(item, Model.Sections);


    }
</ul>
@if (Model.Sections != default && Model.Sections.Count > 10)
{
    <div class="container">
        <button class="btn btn-group" type="submit">Add Course Section</button>
    </div>
}

@functions{

    private async Task renderSection(SectionModel item, List<SectionModel> sections)
    {
        var showUploadForm = ViewData["ShowUploadForm"] as bool?;
        var parentSectionId = ViewData["ParentSectionId"] as long?;

        <li class="list-group-item">
            <div class="d-flex justify-content-between">
                <strong>@item.Name</strong>
                @if (User.IsCurrentAuthor(Model.AuthorId))
                {
                    <div class="">
                        <button type="button" class="btn btn-link" id="context-toggle-@item.Id" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-ellipsis-v">
                            </i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-sm" aria-labelledby="context-toggle-@item.Id">

                            <li class="dropdown-item">
                                <form class="d-inline" asp-action="DeleteSection" asp-controller="Author">
                                    <button class="btn btn-link" type="submit">
                                        Delete <i class="fas fa-times"></i>
                                    </button>
                                    <input type="hidden" name="Id" value="@item.Id" />
                                    <input type="hidden" name="CourseId" value="@item.CourseId" />

                                </form>
                            </li>
                            <li class="dropdown-item">
                                <a asp-action="edit" asp-route-showadd="true" asp-route-id="@Model.Id" asp-route-parentid="@item.Id" title="Add Sub-section">
                                    Section <i class="fas fa-plus"></i>
                                </a>
                            </li>
                            <li class="dropdown-item">
                                <a asp-action="edit" asp-route-showupload="true" asp-route-id="@Model.Id" asp-route-parentid="@item.Id" title="Upload File">
                                    Upload Media <i class="fas fa-upload"></i>
                                </a>
                            </li>
                        </ul>
                        @if (showUploadForm == true)
                        {
                            <div class="course-body">
                                <vc:upload-course-content-form course-id="@Model.Id" parent-id="@parentSectionId">

                                </vc:upload-course-content-form>
                            </div>
                        }
                    </div>
                }
            </div>
            @if (sections.Any(x => x.ParentSectionId == item.Id))
            {
                <ul class="list-group">
                    @foreach (var subitem in sections.Where(x => x.ParentSectionId == item.Id).OrderBy(x => x.DisplayOrder))
                    {
                        await renderSection(subitem, sections);
                    }
                </ul>
            }
        </li>
    }
}
